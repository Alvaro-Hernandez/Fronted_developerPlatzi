Entender estos tipos de displays es muy importante (sobre todo porque s√≠ son muy importantes cuando est√°s trabajando con CSS üëÄ), ya que a veces estamos tratando de a√±adirle m√°rgenes a algunos elemenos y por alguna extra√±a raz√≥n no funciona (y es aqu√≠ donde muchas personas empiezan a decir que CSS es dif√≠cil), pero es sencillo:
.

inline: Estos elementos son los que su caja mide exactamente lo mismo que su contenido. Estos elementos los podemos usar en textos y en lugar de que se agreguen en una nueva l√≠nea se agregaran justo al ladito del texto. ‚ùó Tienen como desventaja que no podemos ponerles m√°rgenes ni tampoco podemos cambiar su tama√±o.
block: Estos elementos ocupan toda la pantalla, por lo que si quieres agregar otro elemento, este se agregar√° autom√°ticamente abajo. No importa que tengas poco contenido, el elemento s√≠ o s√≠ va a ocupar toda la pantalla.
inline-block: Esto mezcla lo mejor de ambos mundos. Con este display podemos tener tanto los beneficios de inline como de block, es decir, podemos tener elementos que no ocupen todo el ancho de la pantalla, sino que ocupen solamente lo que su contenido ocupa, pero tambi√©n vamos a poder darle m√°rgenes y podremos cambiar su tama√±o ü§†.
.
Conociendo esto ya puedes empezar a armar layouts en tu p√°gina web usando CSS. Aunque a√∫n nos faltan ver dos displays que √∫ltimamente son muy usados (y que son la raz√≥n por la cual CSS es amor y es muy f√°cil trabajar con el lenguaje üíö).